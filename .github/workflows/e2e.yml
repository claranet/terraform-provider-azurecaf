name: E2E Tests

on:
  # Run E2E tests on pull requests
  pull_request:
    branches: [main]
    paths:
      - 'azurecaf/**'
      - 'e2e/**'
      - '*.go'
      - 'go.mod'
      - 'go.sum'
      - 'Makefile'
  
  # Run E2E tests on manual trigger
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of E2E tests to run'
        required: true
        default: 'all'
        type: choice
        options:
        - quick
        - all
        - import_only
        - naming_only

# Restrict permissions for all jobs by default
permissions:
  contents: read

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~> 1.0"

      - name: Build Provider
        run: make build
        env:
          CHECKPOINT_DISABLE: 1

      - name: E2E Tests - Quick (Always)
        run: make test_e2e_quick
        env:
          CHECKPOINT_DISABLE: 1
          TF_IN_AUTOMATION: 1
          TF_CLI_ARGS_init: "-upgrade=false"

      - name: E2E Tests - Data Source
        if: github.event.inputs.test_type == 'all' || github.event_name == 'pull_request'
        run: make test_e2e_data_source
        env:
          CHECKPOINT_DISABLE: 1
          TF_IN_AUTOMATION: 1
          TF_CLI_ARGS_init: "-upgrade=false"

      - name: E2E Tests - Naming Conventions
        if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'naming_only' || github.event_name == 'pull_request'
        run: make test_e2e_naming
        env:
          CHECKPOINT_DISABLE: 1
          TF_IN_AUTOMATION: 1
          TF_CLI_ARGS_init: "-upgrade=false"

      - name: E2E Tests - Multiple Resource Types
        if: github.event.inputs.test_type == 'all' || github.event_name == 'pull_request'
        run: make test_e2e_multiple_types
        env:
          CHECKPOINT_DISABLE: 1
          TF_IN_AUTOMATION: 1
          TF_CLI_ARGS_init: "-upgrade=false"

      - name: E2E Tests - Import Functionality
        if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'import_only' || github.event_name == 'pull_request'
        run: make test_e2e_import
        env:
          CHECKPOINT_DISABLE: 1
          TF_IN_AUTOMATION: 1
          TF_CLI_ARGS_init: "-upgrade=false"

      - name: E2E Tests - Complete Suite (Manual Full Test)
        if: github.event.inputs.test_type == 'all'
        run: make test_e2e
        env:
          CHECKPOINT_DISABLE: 1
          TF_IN_AUTOMATION: 1
          TF_CLI_ARGS_init: "-upgrade=false"

  e2e-summary:
    name: E2E Test Summary
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    
    steps:
      - name: Check E2E Test Results
        run: |
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "‚úÖ All E2E tests passed successfully!"
            echo "üöÄ Provider is ready for deployment"
          else
            echo "‚ùå E2E tests failed"
            echo "üîç Please check the test outputs above"
            exit 1
          fi
